import {observable, computed, action} from 'mobx';export default class{    constructor(rootStore){        this.rootStore = rootStore;    } 		@observable formData = {        name: {            value: '',            label: 'Name',            validator: val => /^[aA-zZ ]{2,}$/.test(val),            errorText: 'Use symboles',            valid: null        },        phone: {            value: '',            label: 'Phone',            validator: val => /^[0-9]{7,15}$/.test(val),            errorText: '7 - 15 numbers',            valid: null        },        email: {            value: '',            label: 'Email',            validator: val => /^.+@.+$/.test(val),            errorText: 'Add @',            valid: null        }			}	@observable lastOrderCash = {		name: '',		email: '',		phone: '',		total: ''	}	@computed get formValid(){		return Object.values(this.formData).every(field => field.valid);	}	@computed get data(){		let data = {}		for(let name in this.formData){			data[name] = this.formData[name].value				}		return data	}	@action change(key, value){		let field = this.formData[key];		field.value = value;		field.valid = field.validator(field.value);	}	@action send(){		return new Promise((resolve, reject) => {			this.lastOrderCash.total = this.rootStore.cart.total			for(let key in this.formData){				this.lastOrderCash[key] = this.formData[key].value			}			this.rootStore.cart.clean().then(() => {				resolve();			})		})	}}// function getProducts(){// 	return [// 		{// 				id: 100,// 				title: 'ZTE 15',// 				price: 18000,// 				rest: 10, //остаток на складе// 				current: 1 //сколько товаров положили в корзину// 			},// 			{// 				id: 101,// 				title: 'Samsung 5',// 				price: 15000,// 				rest: 5,// 				current: 1// 			},// 			{// 				id: 102,// 				title: 'Ipone 3',// 				price: 19000,// 				rest: 4,// 				current: 1// 			},// 			{// 				id: 103,// 				title: 'Honor 2',// 				price: 11000,// 				rest: 7,// 				current: 1// 		}// 	]// }